{
    "openapi": "3.0.0",
    "info": {
        "title": "Escrow API",
        "version": "1.0.0",
        "description": "Escrow API",
        "contact": {
            "email": "keval.sayar@globalvoxinc.com",
            "name": "Keval Sayar"
        }
    },
    "tags": [
        {
            "name": "Deals",
            "description": "Deal operations"
        }
    ],
    "servers": [
        {
            "url": "{basePath}",
            "description": "Main Server",
            "variables": {
                "basePath": {
                    "default": "/v1",
                    "enum": [
                        "/v1"
                    ]
                }
            }
        }
    ],
    "components": {
        "responses": {
            "200": {
                "description": "Request has succeeded.",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "code": {
                                    "type": "integer",
                                    "default": 200
                                },
                                "status": {
                                    "type": "boolean",
                                    "default": true
                                },
                                "message": {
                                    "type": "string",
                                    "default": "The resource has been fetched and is transmitted in the data body."
                                },
                                "data": {
                                    "type": "object",
                                    "default": {}
                                }
                            }
                        }
                    }
                }
            },
            "201": {
                "description": "New resource created.",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "integer",
                                    "default": 201
                                },
                                "status": {
                                    "type": "boolean",
                                    "default": true
                                },
                                "message": {
                                    "type": "string",
                                    "default": "New resource created."
                                }
                            }
                        }
                    }
                }
            },
            "400": {
                "description": "Bad Request.",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "code": {
                                    "type": "integer",
                                    "default": 400
                                },
                                "status": {
                                    "type": "boolean",
                                    "default": false
                                },
                                "message": {
                                    "type": "string",
                                    "default": "Bad Request"
                                }
                            }
                        }
                    }
                }
            },
            "404": {
                "description": "Resource Not Found.",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "code": {
                                    "type": "integer",
                                    "default": 404
                                },
                                "status": {
                                    "type": "boolean",
                                    "default": false
                                },
                                "message": {
                                    "type": "string",
                                    "default": "Can not map the specified URl to a resource!"
                                }
                            }
                        }
                    }
                }
            },
            "500": {
                "description": "Internal Server Error.",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "code": {
                                    "type": "integer",
                                    "default": 500
                                },
                                "status": {
                                    "type": "boolean",
                                    "default": false
                                },
                                "message": {
                                    "type": "string",
                                    "default": "Server encountered an unexpected condition that prevented it from fulfilling the request!"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "paths": {
        "/deal": {
            "post": {
                "tags": [
                    "Deals"
                ],
                "description": "Create a new deal in Escrow.",
                "requestBody": {
                    "required": true,
                    "description": "request body for creating a new deal.",
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "additionalProperties": false,
                                "title": "Deal",
                                "properties": {
                                    "deal_title": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "Escrow Title Sample",
                                        "nullable": false
                                    },
                                    "deal_description": {
                                        "type": "integer",
                                        "format": "string",
                                        "example": "This is a sample Escrow deal description.",
                                        "nullable": false
                                    },
                                    "escrow_amount": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "10000000000",
                                        "nullable": false
                                    },
                                    "deal_token": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "BNB",
                                        "nullable": false
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "$ref": "#/components/responses/201"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                }
            },
            "get": {
                "description": "Get all or a specific deal's information.",
                "tags": [
                    "Deals"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "deal_id",
                        "schema": {
                            "type": "string",
                            "nullable": false
                        },
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "wallet_address",
                        "schema": {
                            "type": "string",
                            "nullable": false
                        },
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "page_num",
                        "schema": {
                            "type": "integer",
                            "nullable": false
                        },
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "record_limit",
                        "schema": {
                            "type": "integer",
                            "nullable": false
                        },
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "filter",
                        "schema": {
                            "type": "string",
                            "nullable": false
                        },
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                }
            }
        },
        "/deal/search": {
            "post": {
                "tags": [
                    "Deals"
                ],
                "description": "search deals on the basis of Title, Description, Fund TxHash/ Release TxHash, Buyer/Seller wallet address",
                "parameters": [
                    {
                        "in": "query",
                        "name": "page_num",
                        "schema": {
                            "type": "integer",
                            "nullable": false
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "record_limit",
                        "schema": {
                            "type": "integer",
                            "nullable": false
                        },
                        "required": true
                    }
                ],
                "requestBody": {
                    "required": true,
                    "description": "request body for search route",
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "additionalProperties": false,
                                "properties": {
                                    "searchValue": {
                                        "type": "string",
                                        "format": "string",
                                        "nullable": false
                                    },
                                    "wallet_address": {
                                        "type": "string",
                                        "format": "string",
                                        "nullable": false
                                    },
                                    "filter": {
                                        "type": "string",
                                        "format": "string",
                                        "nullable": false
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                }
            }
        },
        "/deal/accept": {
            "get": {
                "description": "Checks if a particular deal's link is active or inactive.",
                "tags": [
                    "Deals"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "deal_id",
                        "schema": {
                            "type": "string",
                            "nullable": false
                        },
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                }
            }
        }
    }
}